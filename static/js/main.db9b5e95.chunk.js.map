{"version":3,"sources":["redux/operations.js","redux/actions.js","redux/reducer.js","redux/store.js","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","redux/selectors.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["contactsApi","createApi","reducerPath","tagTypes","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","fetchContact","query","providesTags","result","map","type","id","addContacts","mutation","newContact","url","method","body","invalidatesTags","deleteContacts","useFetchContactQuery","useAddContactsMutation","useDeleteContactsMutation","changeFilter","createAction","filter","createReducer","_","payload","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","devTools","process","setupListeners","dispatch","Container","children","className","ContactForm","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","repeatName","reduce","acc","contact","repeatNumber","includes","alert","value","pattern","title","required","onChange","target","getFilter","state","Filter","useDispatch","useSelector","event","ContactItem","isDeleting","isLoading","onClick","ContactList","console","log","contacts","setContacts","useEffect","optimizedFilter","toLowerCase","error","App","contactApi","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVAEaA,EAAcC,YAAU,CACnCC,YAAa,cACbC,SAAU,CAAC,YACXC,UAAWC,YAAe,CACxBC,QAAS,iDAEXC,UAAW,SAACC,GAAD,MAAc,CACvBC,aAAcD,EAAQE,MAAM,CAC1BA,MAAO,8BACPC,aAAc,SAACC,GAAD,OACZA,EAAM,sBAEGA,EAAOC,KAAI,kBAAa,CAAEC,KAAM,WAAYC,GAAjC,EAAGA,QAFjB,CAGA,CAAED,KAAM,WAAYC,GAAI,UAE1B,CAAC,CAAED,KAAM,WAAYC,GAAI,YAEjCC,YAAaR,EAAQS,SAAS,CAC5BP,MAAO,SAACQ,GAAD,MAAiB,CACtBC,IAAI,YACJC,OAAQ,OACRC,KAAK,eAAMH,KAEbI,gBAAiB,CAAC,CAAER,KAAM,WAAYC,GAAI,WAE5CQ,eAAgBf,EAAQS,SAAS,CAC/BP,MAAO,SAACK,GAAD,MAAS,CACdI,IAAI,YAAD,OAAcJ,GACjBK,OAAQ,WAEVE,gBAAiB,CAAC,CAAER,KAAM,WAAYC,GAAI,eAM9CS,EAGExB,EAHFwB,qBACAC,EAEEzB,EAFFyB,uBACAC,EACE1B,EADF0B,0B,OCtCWC,EAAeC,uBAAa,gBCEnCC,EAASC,wBAAc,GAAD,eACzBH,GAAe,SAACI,EAAD,YAAMC,YAGTC,4BAAgB,CAC7BJ,WCMWK,EAAQC,yBAAe,CAClCC,SAAO,mBACJpC,EAAYE,YAAcF,EAAYoC,SADlC,0BAEMP,GAFN,GAIPQ,WAAY,SAACC,GAAD,OACVA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,QAE3DC,OAAO/C,EAAYqC,aACxBW,UAAUC,IAGZC,yBAAehB,EAAMiB,U,iBClBNC,EATG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OACE,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,mBAAd,uBACCD,M,aCFQ,SAASE,EAAT,GAAuC,IAAhBvD,EAAe,EAAfA,YACpC,EAAsByB,IAAfT,EAAP,oBAEA,EAAwBwC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAsCA,OACE,uBAAMN,UAAU,OAAOO,SA3BJ,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAahE,EAAYiE,QAC7B,SAACC,EAAKC,GAAN,4BAAsBD,GAAtB,CAA2BC,EAAQV,SACnC,IAEIW,EAAepE,EAAYiE,QAC/B,SAACC,EAAKC,GAAN,4BAAsBD,GAAtB,CAA2BC,EAAQR,WACnC,IAGEK,EAAWK,SAASZ,IAASW,EAAaC,SAASV,GACrDW,MAAM,GAAD,OAAIb,EAAJ,YAAYE,EAAZ,wBAIM,KAATF,GAA0B,KAAXE,GAMnB3C,EADmB,CAAEyC,OAAME,WAE3BD,EAAQ,IACRE,EAAU,KAPRU,MAAM,eAUR,UACE,yCAEE,uBACExD,KAAK,OACL2C,KAAK,OACLc,MAAOd,EACPe,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SA/CiB,SAACb,GACxB,IAAML,EAAOK,EAAEc,OAAOL,MACtBb,EAAQD,SAgDN,2CAEE,uBACE3C,KAAK,MACL2C,KAAK,SACLc,MAAOZ,EACPa,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,SAtDmB,SAACb,GAC1B,IAAMH,EAASG,EAAEc,OAAOL,MACxBX,EAAUD,SAuDR,wBAAQ7C,KAAK,SAASwC,UAAU,eAAhC,4BCxEC,IAAMuB,EAAY,SAACC,GAAD,OAAWA,EAAMD,UAAUhD,Q,MCMrC,SAASkD,IACtB,IAAM5B,EAAW6B,cACXT,EAAQU,YAAYJ,GAE1B,OACE,sBAAKvB,UAAU,UAAf,UACE,oBAAIA,UAAU,yBAAd,sBACA,oBAAIA,UAAU,gBAAd,mCACA,uBACEA,UAAU,gBACVxC,KAAK,OACLyD,MAAOA,EACPI,SATW,SAACO,GAAD,OAAW/B,EAASxB,EAAauD,EAAMN,OAAOL,cCLlD,SAASY,EAAT,GAA4C,IAArB1B,EAAoB,EAApBA,KAAME,EAAc,EAAdA,OAAQ5C,EAAM,EAANA,GAClD,EACEW,IADF,mBAAOH,EAAP,KAAoC6D,EAApC,KAAyBC,UAEzB,OACE,qBAAI/B,UAAU,cAAd,UACE,mBAAGA,UAAU,oBAAb,SAAkCG,IAClC,mBAAGH,UAAU,oBAAb,SAAkCK,IAClC,wBACEL,UAAU,0BACVgC,QAAS,kBAAM/D,EAAeR,IAFhC,SAIGqE,EAAa,cAAgB,c,MCRvB,SAASG,EAAT,GAAuC,IAAhBvF,EAAe,EAAfA,YAC9BuE,EAAQU,YAAYJ,GAC1BW,QAAQC,IAAIlB,GACZ,MAAgCf,mBAAS,IAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KAcA,OAbAC,qBAAU,WACR,IAAMC,EAAkBtB,EAAMuB,cAC9B,IACEH,EACE3F,EAAY6B,QAAO,qBAAG4B,KACfqC,cAAczB,SAASwB,OAGhC,MAAOE,GACP,OAAOA,KAER,CAAC/F,EAAauE,IAGf,mCACE,oBAAIjB,UAAU,cAAd,SACGoC,EAAS7E,KAAI,gBAAG4C,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAQ5C,EAAjB,EAAiBA,GAAjB,OACZ,cAACoE,EAAD,CAAsB1B,KAAMA,EAAME,OAAQA,EAAQ5C,GAAIA,GAApCA,UCVbiF,MAXf,WACE,IAAcC,EAAezE,IAArB0E,KACR,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAalG,YAAaiG,IAC1B,cAAC,EAAD,IACCA,GAAc,cAAC,EAAD,CAAajG,YAAaiG,QCP/CE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUnE,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJoE,SAASC,eAAe,W","file":"static/js/main.db9b5e95.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const contactsApi = createApi({\n  reducerPath: \"contactsApi\",\n  tagTypes: [\"Contacts\"],\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://61a9124e33e9df0017ea3ca8.mockapi.io/\",\n  }),\n  endpoints: (builder) => ({\n    fetchContact: builder.query({\n      query: () => `/contacts`,\n      providesTags: (result) =>\n        result\n          ? [\n              ...result.map(({ id }) => ({ type: \"Contacts\", id })),\n              { type: \"Contacts\", id: \"LIST\" },\n            ]\n          : [{ type: \"Contacts\", id: \"LIST\" }],\n    }),\n    addContacts: builder.mutation({\n      query: (newContact) => ({\n        url: `/contacts`,\n        method: \"POST\",\n        body: { ...newContact },\n      }),\n      invalidatesTags: [{ type: \"Contacts\", id: \"LIST\" }],\n    }),\n    deleteContacts: builder.mutation({\n      query: (id) => ({\n        url: `contacts/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [{ type: \"Contacts\", id: \"LIST\" }],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactQuery,\n  useAddContactsMutation,\n  useDeleteContactsMutation,\n} = contactsApi;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const changeFilter = createAction(\"filter/value\");\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./actions\";\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  filter,\n});\n\n// import { combineReducers } from \"redux\";\n// import { createReducer } from \"@reduxjs/toolkit\";\n\n// const initState = [\n//   {\n//     id: \"id-1\",\n//     name: \"Rosie Simpson\",\n//     number: \"459-12-56\",\n//   },\n//   {\n//     id: \"id-2\",\n//     name: \"Hermione Kline\",\n//     number: \"443-89-12\",\n//   },\n//   {\n//     id: \"id-3\",\n//     name: \"Eden Clements\",\n//     number: \"645-17-79\",\n//   },\n//   {\n//     id: \"id-4\",\n//     name: \"Annie Copeland\",\n//     number: \"227-91-26\",\n//   },\n// ];\n\n// const contactList = createReducer(initState, {\n//   \"contacts/add\": (state, { payload }) => [...state, payload],\n//   \"contacts/delete\": (state, { payload }) =>\n//     state.filter(({ id }) => id !== payload),\n// });\n\n// const filter = createReducer(\"\", {\n//   \"filter/value\": (state, { payload }) => payload,\n// });\n\n// export const phonebookReducer = combineReducers({\n//   contact: contactList,\n//   filter,\n// });\n","import { setupListeners } from \"@reduxjs/toolkit/dist/query\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nimport { contactsApi } from \"./operations\";\nimport filter from \"./reducer\";\n\nexport const store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    getFilter: filter,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(contactsApi.middleware),\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\nsetupListeners(store.dispatch);\n\n// import { configureStore } from \"@reduxjs/toolkit\";\n// import logger from \"redux-logger\";\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n// import { phonebookReducer } from \"./reducer\";\n\n// const phonebookPersistConfig = {\n//   key: \"contact\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n// const persisteReducer = persistReducer(\n//   phonebookPersistConfig,\n//   phonebookReducer\n// );\n// export const store = configureStore({\n//   reducer: persisteReducer,\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }).concat(logger),\n// });\n// export const persistor = persistStore(store);\n","import \"./Container.scss\";\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"Container\">\n      <h1 className=\"Container__title\">Phonebook</h1>\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","import React, { useState } from \"react\";\nimport { useAddContactsMutation } from \"../../redux/operations\";\nimport \"./ContactForm.scss\";\n\nexport default function ContactForm({ contactsApi }) {\n  const [addContacts] = useAddContactsMutation();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    const name = e.target.value;\n    setName(name);\n  };\n\n  const handleNumberChange = (e) => {\n    const number = e.target.value;\n    setNumber(number);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const repeatName = contactsApi.reduce(\n      (acc, contact) => [...acc, contact.name],\n      []\n    );\n    const repeatNumber = contactsApi.reduce(\n      (acc, contact) => [...acc, contact.number],\n      []\n    );\n\n    if (repeatName.includes(name) || repeatNumber.includes(number)) {\n      alert(`${name} ${number} is already created`);\n      return;\n    }\n\n    if (name === \"\" || number === \"\") {\n      alert(`Enter data`);\n      return;\n    }\n\n    const newContact = { name, number };\n    addContacts(newContact);\n    setName(\"\");\n    setNumber(\"\");\n  };\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleNameChange}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          onChange={handleNumberChange}\n        />\n      </label>\n      <button type=\"submit\" className=\"Form__button\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","export const getFilter = (state) => state.getFilter.filter;\n","import React from \"react\";\nimport { changeFilter } from \"../../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"../../redux/selectors\";\nimport \"./Filter.scss\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  const onChange = (event) => dispatch(changeFilter(event.target.value));\n  return (\n    <div className=\"Filter \">\n      <h2 className=\"Filter__contacts-title\">Contacts</h2>\n      <h3 className=\"Filter__title\">Find contacts by name</h3>\n      <input\n        className=\"Filter__input\"\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDeleteContactsMutation } from \"../../redux/operations\";\n\nexport default function ContactItem({ name, number, id }) {\n  const [deleteContacts, { isLoading: isDeleting }] =\n    useDeleteContactsMutation();\n  return (\n    <li className=\"ContactItem\">\n      <p className=\"ContactItem__text\">{name}</p>\n      <p className=\"ContactItem__text\">{number}</p>\n      <button\n        className=\"ContactListItem__button\"\n        onClick={() => deleteContacts(id)}\n      >\n        {isDeleting ? \"Deleting...\" : \"Delete\"}\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getFilter } from \"../../redux/selectors\";\nimport ContactItem from \"../ContactItem/ContactItem\";\n\nimport \"./ContactList.scss\";\n\nexport default function ContactList({ contactsApi }) {\n  const value = useSelector(getFilter);\n  console.log(value);\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    const optimizedFilter = value.toLowerCase();\n    try {\n      setContacts(\n        contactsApi.filter(({ name }) =>\n          name.toLowerCase().includes(optimizedFilter)\n        )\n      );\n    } catch (error) {\n      return error;\n    }\n  }, [contactsApi, value]);\n\n  return (\n    <>\n      <ul className=\"ContactList\">\n        {contacts.map(({ name, number, id }) => (\n          <ContactItem key={id} name={name} number={number} id={id} />\n        ))}\n      </ul>\n    </>\n  );\n}\n","import { useFetchContactQuery } from \"../src/redux/operations\";\n\nimport Container from \"./components/Container/Container\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nfunction App() {\n  const { data: contactApi } = useFetchContactQuery();\n  return (\n    <Container>\n      <ContactForm contactsApi={contactApi} />\n      <Filter />\n      {contactApi && <ContactList contactsApi={contactApi} />}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}